{"version":3,"sources":["keys.js","Actions/lyrics.js","components/LyricsSearch.js","Actions/youtube.js","components/YouTubeSearch.js","Actions/favList.js","components/MusicPlayer.js","components/YouTubeSearchResult.js","components/LyricsSearchResult.js","components/DisplayLyrics.js","components/FavListItems.js","components/FavList.js","components/Header.js","components/Main.js","Reducers/youtube.js","Reducers/lyrics.js","Reducers/favList.js","Reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","youtubeAPI","lyricsAPI","requestAPI","keyword","dispatch","fetch","keys","then","response","text","responseText","replace","JSON","parse","json","data","message","body","track_list","searchResult","header","available","title","filteredData","Object","filter","key","track","track_name","includes","artist_name","reduce","obj","forEach","push","lyricsId","track_id","artist","thumb","album_coverart_100x100","type","favorite","receiveAPI","requestLyricsAPI","saveLyricsId","lyrics","undefined","lyrics_body","receiveSelectedLyricsAPI","LyricsSearch","inputKeyword","e","target","value","props","searchLyrics","onKeyPress","which","className","onChange","this","onClick","class","React","Component","connect","state","selectVideo","selectedVideoId","items","console","log","pageInfo","totalResults","x","videoId","id","snippet","thumbnails","default","url","YouTubeSearch","searchYouTube","youtube","updateFavList","favList","removeItem","index","MusicPlayer","onReady","event","playVideo","getLocalData","local","localStorage","getItem","addFavList","favoriteItem","setItem","stringify","musicPlayer","YouTube","YouTubeSearchResult","map","item","href","src","LyricsSearchResult","selectSong","DisplayLyrics","error","FavListItems","componentDidMount","componentDidUpdate","selectListItem","selectedItem","reverse","FavList","showFavList","length","Header","favListButton","toggleFavList","Main","initialState","favData","youtubeReducer","action","lyricsReducer","itemToRemove","reducers","combineReducers","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,CACfC,WAAY,0CACZC,UAAW,qC,8MCwCAC,EAAa,SAAAC,GAAO,OAAI,SAAAC,GAAQ,OAC3CC,MAAM,iEAAD,OAC8DF,EAD9D,mBAEDG,IAAKL,UAFJ,uDAKFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,OADcA,EAAaC,QAAQ,0BAA2B,OAG/DJ,MAAK,SAAAE,GAAI,OAAIG,KAAKC,MAAMJ,MACxBF,MAAK,SAAAO,GAAI,OAAIV,EA/CQ,SAAAU,GACxB,IAAMC,EAAOD,EAAKE,QAAQC,KAAKC,WAC3BC,EAAe,GAEnB,GAAsC,IAAlCL,EAAKE,QAAQI,OAAOC,UACtBF,EAAe,CAAC,CAAEG,MAAO,oDACpB,CACL,IAAMC,EAAeC,OAAOlB,KAAKS,GAC9BU,QACC,SAAAC,GAAG,OACAX,EAAKW,GAAKC,MAAMC,WAAWC,SAAS,aACpCd,EAAKW,GAAKC,MAAMG,YAAYD,SAAS,cAEzCE,QAAO,SAACC,EAAKN,GAEZ,OADAM,EAAIN,GAAOX,EAAKW,GACTM,IACN,IAELR,OAAOlB,KAAKiB,GAAcU,SAAQ,SAAAP,GAAG,OACnCP,EAAae,KAAK,CAChBC,SAAUpB,EAAKW,GAAKC,MAAMS,SAC1BC,OAAQtB,EAAKW,GAAKC,MAAMG,YACxBR,MAAOP,EAAKW,GAAKC,MAAMC,WACvBU,MAAOvB,EAAKW,GAAKC,MAAMY,uBACvBC,KAAM,SACNC,UAAU,OAIhB,MAAO,CACLD,KAAM,qBACNrB,gBAgBuBuB,CAAW5B,SAuBzB6B,EAAmB,SAAAR,GAC9B,OAAO,SAAA/B,GAGL,OAFAA,EAPiB,SAAA+B,GAAQ,MAAK,CAChCK,KAAM,iBACNL,YAKWS,CAAaT,IAEf9B,MAAM,+DAAD,OACqD8B,EADrD,mBAER7B,IAAKL,UAFG,0CAKTM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,OADcA,EAAaC,QAAQ,0BAA2B,OAG/DJ,MAAK,SAAAE,GAAI,OAAIG,KAAKC,MAAMJ,MACxBF,MAAK,SAAAO,GAAI,OAAIV,EApCoB,SAAAU,GAUtC,MAAO,CACL0B,KAAM,8BACNK,YAT6BC,IAA7BhC,EAAKE,QAAQC,KAAK4B,QACuB,KAAzC/B,EAAKE,QAAQC,KAAK4B,OAAOE,YAEhB,wBAEAjC,EAAKE,QAAQC,KAAK4B,OAAOE,aA4BTC,CAAyBlC,SCxFhDmC,E,2MACJC,aAAe,SAAAC,GACb,IAAMhD,EAAUgD,EAAEC,OAAOC,MACzB,EAAKC,MAAMJ,aAAa/C,I,EAE1BoD,aAAe,WACb,IAAMpD,EAAU,EAAKmD,MAAMnD,QAC3B,EAAKmD,MAAMpD,WAAWC,I,EAExBqD,WAAa,SAAAL,GACK,KAAZA,EAAEM,OACJ,EAAKF,gB,wEAIP,OACE,yBAAKG,UAAU,mBACb,sCAEA,2BACElB,KAAK,OACLmB,SAAUC,KAAKV,aACfM,WAAYI,KAAKJ,aAEnB,4BAAQK,QAASD,KAAKL,aAAcG,UAAU,iBAC5C,uBAAGI,MAAM,wB,GAzBQC,IAAMC,WAkDlBC,eAlBS,SAAAC,GACtB,MAAO,CACL/D,QAAS+D,EAAMrB,OAAO1C,YAIC,SAAAC,GAAQ,MAAK,CACtCF,WAAY,SAAAC,GACVC,EAASF,EAAWC,KAEtB+C,aAAc,SAAA/C,GACZC,ED7CwB,SAAAD,GAAO,MAAK,CACtCqC,KAAM,uBACNrC,WC2CW+C,CAAa/C,KAExBwC,iBAAkB,SAAAR,GAChB/B,EAASuC,EAAiBR,QAIf8B,CAGbhB,GCzBWkB,EAAc,SAAAC,GACzB,MAAO,CACL5B,KAAM,eACN4B,oBAISlE,EAAa,SAAAC,GACxB,OAAO,SAAAC,GACL,OAAOC,MAAM,0EAAD,OACgEF,EADhE,gBAERG,IAAKN,WAFG,mBAKTO,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAO,GAAI,OAAIV,EAtCM,SAAAU,GACxB,IAAIuD,EAAQvD,EAAKuD,MACblD,EAAe,GAenB,OAdAmD,QAAQC,IAAIzD,GAEuB,IAA/BA,EAAK0D,SAASC,aAChBtD,EAAe,CAAC,CAAEG,MAAO,gDAEzB+C,EAAMpC,SAAQ,SAAAyC,GAAC,OACbvD,EAAae,KAAK,CAChByC,QAASD,EAAEE,GAAGD,QACdrD,MAAOoD,EAAEG,QAAQvD,MACjBgB,MAAOoC,EAAEG,QAAQC,WAAWC,QAAQC,IACpCxC,KAAM,eAIL,CACLA,KAAM,sBACNrB,gBAmByBuB,CAAW5B,SC3ClCmE,E,2MACJ/B,aAAe,SAAAC,GACb,IAAMhD,EAAUgD,EAAEC,OAAOC,MACzB,EAAKC,MAAMJ,aAAa/C,I,EAE1B+E,cAAgB,WACd,IAAM/E,EAAU,EAAKmD,MAAMnD,QAC3B,EAAKmD,MAAMpD,WAAWC,I,EAExBqD,WAAa,SAAAL,GACK,KAAZA,EAAEM,OACJ,EAAKyB,iB,wEAIP,OACE,yBAAKxB,UAAU,mBACb,uCACA,2BACElB,KAAK,OACLmB,SAAUC,KAAKV,aACfM,WAAYI,KAAKJ,aAEnB,4BAAQK,QAASD,KAAKsB,cAAexB,UAAU,iBAC7C,uBAAGI,MAAM,wB,GAxBSC,IAAMC,WA+CnBC,eAhBS,SAAAC,GACtB,MAAO,CACL/D,QAAS+D,EAAMiB,QAAQhF,QACvBgB,aAAc+C,EAAMiB,QAAQhE,iBAIL,SAAAf,GAAQ,MAAK,CACtCF,WAAY,SAAAC,GACVC,EAASF,EAAWC,KAEtB+C,aAAc,SAAA/C,GACZC,ED7CwB,SAAAD,GAC1B,MAAO,CACLqC,KAAM,wBACNrC,WC0CS+C,CAAa/C,QAIX8D,CAGbgB,G,QCtDWG,EAAgB,SAAAC,GAC3B,MAAO,CACL7C,KAAM,kBACN6C,YAISC,EAAa,SAAAC,GAAK,MAAK,CAClC/C,KAAM,cACN+C,UCJIC,E,2MACJC,QAAU,SAAAC,GACRA,EAAMtC,OAAOuC,a,EAEfC,aAAe,WACb,IAAMC,EAAQC,aAAaC,QAAQ,YACnC,IACE,OAAOF,EAAQjF,KAAKC,MAAMgF,GAAS,GACnC,MAAO1C,GACP,MAAO,K,EAGX6C,WAAa,WACX,IAAIX,EAAU,EAAKO,eACbzE,EAAe,EAAKmC,MAAMnC,aAC1BiD,EAAkB,EAAKd,MAAMc,gBAC7BmB,EAAQ/D,OAAOlB,KAAKa,GAAcM,QACtC,SAAAC,GAAG,OAAIP,EAAaO,GAAKiD,UAAYP,KAEjC6B,EAAe9E,EAAaoE,GACnBF,EAAQnD,KAAK+D,GAC5BH,aAAaI,QAAQ,WAAYtF,KAAKuF,UAAUd,IAEhD,EAAK/B,MAAM8B,cAAcC,I,wEAGzB,OACE,6BACGzB,KAAKN,MAAM8C,aACV,6BACE,4BAAQvC,QAASD,KAAKoC,WAAYtC,UAAU,cAC1C,uBAAGI,MAAM,kBAEX,kBAACuC,EAAA,EAAD,CACE1B,QAASf,KAAKN,MAAMc,gBACpBqB,QAAS7B,KAAK6B,QACd/B,UAAU,6B,GApCEK,IAAMC,WA0DjBC,eAdS,SAAAC,GACtB,MAAO,CACLkC,YAAalC,EAAMiB,QAAQiB,YAC3BhC,gBAAiBF,EAAMiB,QAAQf,gBAC/BjD,aAAc+C,EAAMiB,QAAQhE,iBAIL,SAAAf,GAAQ,MAAK,CACtCgF,cAAe,SAAAC,GACbjF,EAASgF,EAAcC,QAIZpB,CAGbuB,GC9DIc,E,2MACJnC,YAAc,SAAAoB,GACZ,IAAMnB,EAAkB,EAAKd,MAAMnC,aAAaoE,GAAOZ,QACvD,EAAKrB,MAAMa,YAAYC,I,wEAEf,IAAD,OACP,OACE,yBAAKQ,GAAG,sBACLhB,KAAKN,MAAMnC,aAAaoF,KAAI,SAACC,EAAMjB,GAAP,OAC3B,uBAAGkB,KAAK,QAAQ/C,UAAU,oBACxB,yBACEhC,IAAK6D,EACL1B,QAAS,kBAAM,EAAKM,YAAYoB,IAChC7B,UAAU,mBAEV,yBAAKgD,IAAKF,EAAKlE,QACf,yBAAKoB,UAAU,mBACb,2BAAI8C,EAAKlF,kB,GAjBSyC,IAAMC,WAuCzBC,eAZS,SAAAC,GACtB,MAAO,CACL/C,aAAc+C,EAAMiB,QAAQhE,aAC5BiF,YAAalC,EAAMiB,QAAQiB,gBAGJ,SAAAhG,GAAQ,MAAK,CACtC+D,YAAa,SAAAC,GACXhE,EAAS+D,EAAYC,QAIVH,CAGbqC,GC1CIK,E,2MACJC,WAAa,SAAArB,GACX,IAAMpD,EAAW,EAAKmB,MAAMnC,aAAaoE,GAAOpD,SAChD,EAAKmB,MAAMX,iBAAiBR,I,wEAEpB,IAAD,OACP,OACE,yBAAKyC,GAAG,qBACLhB,KAAKN,MAAMnC,aAAaoF,KAAI,SAAC7B,EAAGa,GAAJ,OAC3B,uBAAGkB,KAAK,QAAQ/C,UAAU,oBACxB,yBACEhC,IAAK6D,EACL1B,QAAS,kBAAM,EAAK+C,WAAWrB,IAC/B7B,UAAU,mBAEV,yBAAKgD,IAAKhC,EAAEpC,QAEZ,yBAAKoB,UAAU,mBACb,uBAAGA,UAAU,SAAb,IAAuBgB,EAAEpD,OACzB,uBAAGoC,UAAU,UAAb,IAAwBgB,EAAErC,mB,GAnBT0B,IAAMC,WAwCxBC,eAXS,SAAAC,GACtB,MAAO,CACL/C,aAAc+C,EAAMrB,OAAO1B,iBAGJ,SAAAf,GAAQ,MAAK,CACtCuC,iBAAkB,SAAAR,GAChB/B,EAASuC,EAAiBR,QAIf8B,CAGb0C,GC3CIE,E,2MACJjB,aAAe,WACb,IAAMC,EAAQC,aAAaC,QAAQ,YACnC,IACE,OAAOF,EAAQjF,KAAKC,MAAMgF,GAAS,GACnC,MAAO1C,GACP,MAAO,K,EAGX6C,WAAa,WACX,IAAIX,EAAU,EAAKO,eACbzE,EAAe,EAAKmC,MAAMnC,aAC1BgB,EAAW,EAAKmB,MAAMnB,SACtBoD,EAAQ/D,OAAOlB,KAAKa,GAAcM,QACtC,SAAAC,GAAG,OAAIP,EAAaO,GAAKS,WAAaA,KAElC8D,EAAe9E,EAAaoE,GACnBF,EAAQnD,KAAK+D,GAC5BH,aAAaI,QAAQ,WAAYtF,KAAKuF,UAAUd,IAChD,EAAK/B,MAAM8B,cAAcC,I,wEAGzB,OACE,yBAAK3B,UAAU,cACZE,KAAKN,MAAMwD,OAAS,oCAEpBlD,KAAKN,MAAMT,QACV,6BACE,4BAAQgB,QAASD,KAAKoC,WAAYtC,UAAU,cAC1C,uBAAGA,UAAU,kBAGf,yBAAKkB,GAAG,QAAQlB,UAAU,uBACvBE,KAAKN,MAAMT,OAAOlC,QAAQ,qBAAsB,qC,GAjCnCoD,IAAMC,WA2DnBC,eAjBS,SAAAC,GACtB,MAAO,CACLrB,OAAQqB,EAAMrB,OAAOA,OACrB1B,aAAc+C,EAAMrB,OAAO1B,aAC3BgB,SAAU+B,EAAMrB,OAAOV,SACvBkD,QAASnB,EAAMmB,QAAQA,QACvByB,MAAO5C,EAAMrB,OAAOiE,UAGG,SAAA1G,GAAQ,MAAK,CACtCgF,cAAe,SAAAC,GACbjF,EAASgF,EAAcC,KAEzBC,WAAY,SAAAC,GACVnF,EAASkF,EAAWC,QAGTtB,CAGb4C,GC5DIE,E,2MACJnB,aAAe,WACb,IAAMC,EAAQC,aAAaC,QAAQ,YACnC,IACE,OAAOF,GAAmB,OAAVA,EAAiBjF,KAAKC,MAAMgF,GAAS,GACrD,MAAO1C,GACP,MAAO,K,EAGX6D,kBAAoB,WAClB,IAAI3B,EAAU,EAAKO,eACnB,EAAKtC,MAAM8B,cAAcC,I,EAG3B4B,mBAAqB,WACnBnB,aAAaI,QAAQ,WAAYtF,KAAKuF,UAAU,EAAK7C,MAAM+B,W,EAE7D6B,eAAiB,SAAA3B,GACf,IAAM4B,EAAe,EAAK7D,MAAM+B,QAAQE,GACxC,GAA0B,YAAtB4B,EAAa3E,KAAoB,CACnC,IAAM4B,EAAkB+C,EAAaxC,QACrC,EAAKrB,MAAMa,YAAYC,OAClB,CACL,IAAMjC,EAAWgF,EAAahF,SAC9B,EAAKmB,MAAMX,iBAAiBR,K,EAGhCmD,WAAa,SAAAC,GACX,EAAKjC,MAAMgC,WAAWC,I,wEAEd,IAAD,OACP,OACE,6BACG3B,KAAKN,MAAM+B,QACTkB,KAAI,SAAC7B,EAAGa,GAAJ,OACH,6BACE,4BACE1B,QAAS,kBAAM,EAAKyB,WAAWC,IAC/B7B,UAAU,0BAEV,uBAAGA,UAAU,yBAEf,uBACE+C,KAAK,IACL5C,QAAS,kBAAM,EAAKqD,eAAe3B,IACnC7B,UAAU,oBAEV,yBAAKhC,IAAK6D,EAAO7B,UAAU,gBACzB,yBAAKgD,IAAKhC,EAAEpC,MAAOoB,UAAU,cAC7B,yBAAKA,UAAU,uBACb,+BAAKgB,EAAEpD,cAMhB8F,e,GAxDgBrD,IAAMC,WAmFlBC,eAtBS,SAAAC,GACtB,MAAO,CACLmB,QAASnB,EAAMmB,QAAQA,QACvBlE,aAAc+C,EAAMrB,OAAO1B,iBAIJ,SAAAf,GAAQ,MAAK,CACtCgF,cAAe,SAAAC,GACbjF,EAASgF,EAAcC,KAEzBlB,YAAa,SAAAC,GACXhE,EAAS+D,EAAYC,KAEvBzB,iBAAkB,SAAAR,GAChB/B,EAASuC,EAAiBR,KAE5BmD,WAAY,SAAAC,GACVnF,EAASkF,EAAWC,QAITtB,CAGb8C,GCxFIM,E,iLAEF,OACE,yBACE3D,UACEE,KAAKN,MAAMgE,YACP,wBACA,yBAGL1D,KAAKN,MAAMgE,aACV,6BACE,6CAC+B,IAA9B1D,KAAKN,MAAM+B,QAAQkC,OAClB,uBAAG7D,UAAU,wBAAb,kCAIA,4BAGF,kBAAC,EAAD,Y,GArBUK,IAAMC,WAmCbC,eAPS,SAAAC,GACtB,MAAO,CACLmB,QAASnB,EAAMmB,QAAQA,QACvBiC,YAAapD,EAAMmB,QAAQiC,eAIhBrD,CAAyBoD,GCnClCG,E,2MACJC,cAAgB,WACd,EAAKnE,MAAMoE,iB,wEAGX,OACE,yBAAKhE,UAAU,SAASkB,GAAG,QACzB,gDACA,4BAAQlB,UAAU,kBAAkBG,QAASD,KAAK6D,eAC/C7D,KAAKN,MAAMgE,YAAc,gBAAkB,sB,GATjCvD,IAAMC,WA0BZC,eAVS,SAAAC,GAAK,MAAK,CAChCoD,YAAapD,EAAMmB,QAAQiC,gBAGF,SAAAlH,GAAQ,MAAK,CACtCsH,cAAe,WACbtH,EPfgC,CAClCoC,KAAM,wBOkBOyB,CAGbuD,GCvBmBG,E,iLAEjB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKjE,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,Y,GAhBwBK,IAAMC,W,uBCVlC4D,EAAe,CACnBzH,QAAS,GACTgB,aAAc,GACdiD,gBAAiB,GACjBgC,aAAa,EACbyB,QAAS,IA2BIC,EAxBQ,WAAmC,IAAlC5D,EAAiC,uDAAzB0D,EAAcG,EAAW,uCACvD,OAAQA,EAAOvF,MACb,IAAK,wBACH,OAAO,eACF0B,EADL,CAEE/D,QAAS4H,EAAO5H,UAEpB,IAAK,sBACH,OAAO,eACF+D,EADL,CAEE/C,aAAc4G,EAAO5G,aACrBiF,aAAa,IAEjB,IAAK,eACH,OAAO,eACFlC,EADL,CAEEE,gBAAiB2D,EAAO3D,gBACxBgC,aAAa,IAEjB,QACE,OAAOlC,IC5BP0D,EAAe,CACnBzH,QAAS,GACTgB,aAAc,GACd0B,OAAQ,GACRV,SAAU,IA+BG6F,EA5BO,WAAmC,IAAlC9D,EAAiC,uDAAzB0D,EAAcG,EAAW,uCACtD,OAAQA,EAAOvF,MACb,IAAK,uBACH,OAAO,eACF0B,EADL,CAEE/D,QAAS4H,EAAO5H,UAEpB,IAAK,qBACH,OAAO,eACF+D,EADL,CAEE/C,aAAc4G,EAAO5G,aACrB0B,OAAQ,KAEZ,IAAK,8BACH,OAAO,eACFqB,EADL,CAEErB,OAAQkF,EAAOlF,SAEnB,IAAK,iBACH,OAAO,eACFqB,EADL,CAEE/B,SAAU4F,EAAO5F,WAErB,QACE,OAAO+B,IC/BP0D,EAAe,CACnBvC,QAAS,GACTiC,aAAa,GA4BAjC,EAzBC,WAAmC,IAAlCnB,EAAiC,uDAAzB0D,EAAcG,EAAW,uCAChD,OAAQA,EAAOvF,MACb,IAAK,kBACH,OAAO,eACF0B,EADL,CAEEmB,QAAS0C,EAAO1C,QAAQ5D,QAAO,SAAA+E,GAAI,OAAa,OAATA,OAE3C,IAAK,cACH,IAAMjB,EAAQwC,EAAOxC,MACf0C,EAAe/D,EAAMmB,QAAQE,GACnC,OAAO,eACFrB,EADL,CAEEmB,QAASnB,EAAMmB,QAAQ5D,QAAO,SAAA+E,GAAI,OAAIA,IAASyB,OAEnD,IAAK,kBACH,OAAO,eACF/D,EADL,CAEEoD,aAAcpD,EAAMoD,cAGxB,QACE,OAAOpD,ICfEgE,EANEC,YAAgB,CAC/BhD,QAAS2C,EACTjF,OAAQmF,EACR3C,YCIkB+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMC,EAAQC,YAAYR,EAAUS,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5I,MAAK,SAAA6I,GACjCA,EAAaC,kB","file":"static/js/main.0e8be026.chunk.js","sourcesContent":["module.exports = {\n  youtubeAPI: 'AIzaSyBgDZZRrFUExQhXvlUbcfewjqLozvQw4EA',\n  lyricsAPI: 'f3125baf4c683c086d7349d8d73e510d'\n};\n","import keys from \"../keys\";\n\nexport const inputKeyword = keyword => ({\n  type: \"INPUT_KEYWORD_LYRICS\",\n  keyword\n});\n\nexport const receiveAPI = json => {\n  const data = json.message.body.track_list;\n  let searchResult = [];\n\n  if (json.message.header.available === 0) {\n    searchResult = [{ title: \"No result :(  Please try different keyword.\" }];\n  } else {\n    const filteredData = Object.keys(data)\n      .filter(\n        key =>\n          !data[key].track.track_name.includes(\"Karaoke\") &&\n          !data[key].track.artist_name.includes(\"Karaoke\")\n      )\n      .reduce((obj, key) => {\n        obj[key] = data[key];\n        return obj;\n      }, {});\n\n    Object.keys(filteredData).forEach(key =>\n      searchResult.push({\n        lyricsId: data[key].track.track_id,\n        artist: data[key].track.artist_name,\n        title: data[key].track.track_name,\n        thumb: data[key].track.album_coverart_100x100,\n        type: \"lyrics\",\n        favorite: false\n      })\n    );\n  }\n  return {\n    type: \"RECEIVE_API_LYRICS\",\n    searchResult\n  };\n};\n\nexport const requestAPI = keyword => dispatch =>\n  fetch(\n    `https://api.musixmatch.com/ws/1.1/track.search?q_track_artist=${keyword}&apikey=${\n      keys.lyricsAPI\n    }&format=jsonp&callback=jsonp_callback&page_size=15`\n  )\n    .then(response => response.text())\n    .then(responseText => {\n      const match = responseText.replace(/^jsonp_callback\\(|\\)\\;/g, \"\");\n      return match;\n    })\n    .then(text => JSON.parse(text))\n    .then(json => dispatch(receiveAPI(json)));\n\nexport const receiveSelectedLyricsAPI = json => {\n  let lyrics;\n  if (\n    json.message.body.lyrics === undefined ||\n    json.message.body.lyrics.lyrics_body === \"\"\n  ) {\n    lyrics = \" Sorry, no Lyrics :( \";\n  } else {\n    lyrics = json.message.body.lyrics.lyrics_body;\n  }\n  return {\n    type: \"RECEIVE_SELECTED_LYRICS_API\",\n    lyrics\n  };\n};\n\nconst saveLyricsId = lyricsId => ({\n  type: \"SAVE_LYRICS_ID\",\n  lyricsId\n});\n\nexport const requestLyricsAPI = lyricsId => {\n  return dispatch => {\n    dispatch(saveLyricsId(lyricsId));\n\n    return fetch(\n      `https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${lyricsId}&apikey=${\n        keys.lyricsAPI\n      }&format=jsonp&callback=jsonp_callback`\n    )\n      .then(response => response.text())\n      .then(responseText => {\n        const match = responseText.replace(/^jsonp_callback\\(|\\)\\;/g, \"\");\n        return match;\n      })\n      .then(text => JSON.parse(text))\n      .then(json => dispatch(receiveSelectedLyricsAPI(json)));\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { inputKeyword, requestAPI, requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass LyricsSearch extends React.Component {\n  inputKeyword = e => {\n    const keyword = e.target.value;\n    this.props.inputKeyword(keyword);\n  };\n  searchLyrics = () => {\n    const keyword = this.props.keyword;\n    this.props.requestAPI(keyword);\n  };\n  onKeyPress = e => {\n    if (e.which === 13) {\n      this.searchLyrics();\n    }\n  };\n  render() {\n    return (\n      <div className=\"search_area_box\">\n        <h3>Lyrics</h3>\n\n        <input\n          type=\"text\"\n          onChange={this.inputKeyword}\n          onKeyPress={this.onKeyPress}\n        />\n        <button onClick={this.searchLyrics} className=\"search_button\">\n          <i class=\"fas fa-search\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyword: state.lyrics.keyword\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  requestAPI: keyword => {\n    dispatch(requestAPI(keyword));\n  },\n  inputKeyword: keyword => {\n    dispatch(inputKeyword(keyword));\n  },\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LyricsSearch);\n","import keys from '../keys';\n\nexport const inputKeyword = keyword => {\n  return {\n    type: 'INPUT_KEYWORD_YOUTUBE',\n    keyword\n  };\n};\n\nexport const receiveAPI = json => {\n  let items = json.items;\n  let searchResult = [];\n  console.log(json);\n\n  if (json.pageInfo.totalResults === 0) {\n    searchResult = [{ title: 'No result :(  Please try different keyword.' }];\n  } else {\n    items.forEach(x =>\n      searchResult.push({\n        videoId: x.id.videoId,\n        title: x.snippet.title,\n        thumb: x.snippet.thumbnails.default.url,\n        type: 'youtube'\n      })\n    );\n  }\n  return {\n    type: 'RECEIVE_API_YOUTUBE',\n    searchResult\n  };\n};\n\nexport const selectVideo = selectedVideoId => {\n  return {\n    type: 'SELECT_VIDEO',\n    selectedVideoId\n  };\n};\n\nexport const requestAPI = keyword => {\n  return dispatch => {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/search?type=video&part=snippet&q=${keyword}&key=${\n        keys.youtubeAPI\n      }&maxResults=15`\n    )\n      .then(response => response.json())\n      .then(json => dispatch(receiveAPI(json)));\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { inputKeyword, requestAPI } from \"../Actions/youtube\";\n\nclass YouTubeSearch extends React.Component {\n  inputKeyword = e => {\n    const keyword = e.target.value;\n    this.props.inputKeyword(keyword);\n  };\n  searchYouTube = () => {\n    const keyword = this.props.keyword;\n    this.props.requestAPI(keyword);\n  };\n  onKeyPress = e => {\n    if (e.which === 13) {\n      this.searchYouTube();\n    }\n  };\n  render() {\n    return (\n      <div className=\"search_area_box\">\n        <h3>YouTube</h3>\n        <input\n          type=\"text\"\n          onChange={this.inputKeyword}\n          onKeyPress={this.onKeyPress}\n        />\n        <button onClick={this.searchYouTube} className=\"search_button\">\n          <i class=\"fas fa-search\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyword: state.youtube.keyword,\n    searchResult: state.youtube.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  requestAPI: keyword => {\n    dispatch(requestAPI(keyword));\n  },\n  inputKeyword: keyword => {\n    dispatch(inputKeyword(keyword));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YouTubeSearch);\n","export const updateFavList = favList => {\n  return {\n    type: \"UPDATE_FAV_LIST\",\n    favList\n  };\n};\n\nexport const removeItem = index => ({\n  type: \"REMOVE_ITEM\",\n  index\n});\nexport const toggleFavList = () => ({\n  type: \"TOGGLE_FAV_LIST\"\n});\n","import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport { connect } from \"react-redux\";\nimport { updateFavList } from \"../Actions/favList\";\n\nclass MusicPlayer extends React.Component {\n  onReady = event => {\n    event.target.playVideo();\n  };\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  addFavList = () => {\n    let favList = this.getLocalData();\n    const searchResult = this.props.searchResult;\n    const selectedVideoId = this.props.selectedVideoId;\n    const index = Object.keys(searchResult).filter(\n      key => searchResult[key].videoId === selectedVideoId\n    );\n    const favoriteItem = searchResult[index];\n    const result = favList.push(favoriteItem);\n    localStorage.setItem(\"favorite\", JSON.stringify(favList));\n\n    this.props.updateFavList(favList);\n  };\n  render() {\n    return (\n      <div>\n        {this.props.musicPlayer && (\n          <div>\n            <button onClick={this.addFavList} className=\"fav_button\">\n              <i class=\"far fa-heart\" />\n            </button>\n            <YouTube\n              videoId={this.props.selectedVideoId}\n              onReady={this.onReady}\n              className=\"main_content video\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    musicPlayer: state.youtube.musicPlayer,\n    selectedVideoId: state.youtube.selectedVideoId,\n    searchResult: state.youtube.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MusicPlayer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../Actions/youtube\";\n\nclass YouTubeSearchResult extends React.Component {\n  selectVideo = index => {\n    const selectedVideoId = this.props.searchResult[index].videoId;\n    this.props.selectVideo(selectedVideoId);\n  };\n  render() {\n    return (\n      <div id=\"youtube_result_top\">\n        {this.props.searchResult.map((item, index) => (\n          <a href=\"#jump\" className=\"result_item_link\">\n            <div\n              key={index}\n              onClick={() => this.selectVideo(index)}\n              className=\"result_item_box\"\n            >\n              <img src={item.thumb} />\n              <div className=\"description_box\">\n                <p>{item.title}</p>\n              </div>\n            </div>\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResult: state.youtube.searchResult,\n    musicPlayer: state.youtube.musicPlayer\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  selectVideo: selectedVideoId => {\n    dispatch(selectVideo(selectedVideoId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YouTubeSearchResult);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass LyricsSearchResult extends React.Component {\n  selectSong = index => {\n    const lyricsId = this.props.searchResult[index].lyricsId;\n    this.props.requestLyricsAPI(lyricsId);\n  };\n  render() {\n    return (\n      <div id=\"lyrics_result_top\">\n        {this.props.searchResult.map((x, index) => (\n          <a href=\"#jump\" className=\"result_item_link\">\n            <div\n              key={index}\n              onClick={() => this.selectSong(index)}\n              className=\"result_item_box\"\n            >\n              <img src={x.thumb} />\n\n              <div className=\"description_box\">\n                <p className=\"title\"> {x.title}</p>\n                <p className=\"artist\"> {x.artist}</p>\n              </div>\n            </div>\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResult: state.lyrics.searchResult\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LyricsSearchResult);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateFavList, removeItem } from \"../Actions/favList\";\n\nclass DisplayLyrics extends React.Component {\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  addFavList = () => {\n    let favList = this.getLocalData();\n    const searchResult = this.props.searchResult;\n    const lyricsId = this.props.lyricsId;\n    const index = Object.keys(searchResult).filter(\n      key => searchResult[key].lyricsId === lyricsId\n    );\n    const favoriteItem = searchResult[index];\n    const result = favList.push(favoriteItem);\n    localStorage.setItem(\"favorite\", JSON.stringify(favList));\n    this.props.updateFavList(favList);\n  };\n  render() {\n    return (\n      <div className=\"lyrics_box\">\n        {this.props.error && <p>error</p>}\n\n        {this.props.lyrics && (\n          <div>\n            <button onClick={this.addFavList} className=\"fav_button\">\n              <i className=\"far fa-heart\" />\n            </button>\n\n            <div id=\"jump2\" className=\"main_content lyrics\">\n              {this.props.lyrics.replace(\"\\n,[object Object]\", <br />)}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lyrics: state.lyrics.lyrics,\n    searchResult: state.lyrics.searchResult,\n    lyricsId: state.lyrics.lyricsId,\n    favList: state.favList.favList,\n    error: state.lyrics.error\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  },\n  removeItem: index => {\n    dispatch(removeItem(index));\n  }\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayLyrics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../Actions/youtube\";\nimport { updateFavList, removeItem } from \"../Actions/favList\";\nimport { requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass FavListItems extends React.Component {\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local && local !== null ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  componentDidMount = () => {\n    let favList = this.getLocalData();\n    this.props.updateFavList(favList);\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem(\"favorite\", JSON.stringify(this.props.favList));\n  };\n  selectListItem = index => {\n    const selectedItem = this.props.favList[index];\n    if (selectedItem.type === \"youtube\") {\n      const selectedVideoId = selectedItem.videoId;\n      this.props.selectVideo(selectedVideoId);\n    } else {\n      const lyricsId = selectedItem.lyricsId;\n      this.props.requestLyricsAPI(lyricsId);\n    }\n  };\n  removeItem = index => {\n    this.props.removeItem(index);\n  };\n  render() {\n    return (\n      <div>\n        {this.props.favList\n          .map((x, index) => (\n            <div>\n              <button\n                onClick={() => this.removeItem(index)}\n                className=\"remove_fav_item_button\"\n              >\n                <i className=\"fas fa-times-circle\" />\n              </button>\n              <a\n                href=\"#\"\n                onClick={() => this.selectListItem(index)}\n                className=\"result_item_link\"\n              >\n                <div key={index} className=\"fav_item_box\">\n                  <img src={x.thumb} className=\"fav_thumb\" />\n                  <div className=\"fav_description_box\">\n                    <p> {x.title}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          ))\n          .reverse()}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    favList: state.favList.favList,\n    searchResult: state.lyrics.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  },\n  selectVideo: selectedVideoId => {\n    dispatch(selectVideo(selectedVideoId));\n  },\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  },\n  removeItem: index => {\n    dispatch(removeItem(index));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FavListItems);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FavListItems from \"./FavListItems\";\n\nclass FavList extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          this.props.showFavList\n            ? \"box box_fav_list_show\"\n            : \"box box_fav_list_hide\"\n        }\n      >\n        {this.props.showFavList && (\n          <div>\n            <h3>Favorite List</h3>\n            {this.props.favList.length === 0 ? (\n              <p className=\"no_fav_items_message\">\n                There is no favorite item yet.\n              </p>\n            ) : (\n              <p />\n            )}\n\n            <FavListItems />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    favList: state.favList.favList,\n    showFavList: state.favList.showFavList\n  };\n};\n\nexport default connect(mapStateToProps)(FavList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleFavList } from \"../Actions/favList\";\n\nclass Header extends React.Component {\n  favListButton = () => {\n    this.props.toggleFavList();\n  };\n  render() {\n    return (\n      <div className=\"header\" id=\"jump\">\n        <h1>Music and Lyrics</h1>\n        <button className=\"fav_list_button\" onClick={this.favListButton}>\n          {this.props.showFavList ? \"Hide Fav List\" : \"Show Fav List\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showFavList: state.favList.showFavList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFavList: () => {\n    dispatch(toggleFavList());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport LyricsSearch from \"./LyricsSearch\";\nimport YouTubeSearch from \"./YouTubeSearch\";\nimport MusicPlayer from \"./MusicPlayer\";\nimport YouTubeSearchResult from \"./YouTubeSearchResult\";\nimport LyricsSearchResult from \"./LyricsSearchResult\";\nimport DisplayLyrics from \"./DisplayLyrics\";\nimport FavList from \"./FavList\";\nimport Header from \"./Header\";\n\nexport default class Main extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <div className=\"box\">\n            <YouTubeSearch />\n            <MusicPlayer />\n            <YouTubeSearchResult />\n          </div>\n          <div className=\"box\">\n            <LyricsSearch />\n            <DisplayLyrics />\n            <LyricsSearchResult />\n          </div>\n          <FavList />\n        </div>\n      </div>\n    );\n  }\n}\n","const initialState = {\n  keyword: \"\",\n  searchResult: [],\n  selectedVideoId: \"\",\n  musicPlayer: false,\n  favData: []\n};\n\nconst youtubeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INPUT_KEYWORD_YOUTUBE\":\n      return {\n        ...state,\n        keyword: action.keyword\n      };\n    case \"RECEIVE_API_YOUTUBE\":\n      return {\n        ...state,\n        searchResult: action.searchResult,\n        musicPlayer: false\n      };\n    case \"SELECT_VIDEO\":\n      return {\n        ...state,\n        selectedVideoId: action.selectedVideoId,\n        musicPlayer: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default youtubeReducer;\n","const initialState = {\n  keyword: \"\",\n  searchResult: [],\n  lyrics: \"\",\n  lyricsId: \"\"\n};\n\nconst lyricsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INPUT_KEYWORD_LYRICS\":\n      return {\n        ...state,\n        keyword: action.keyword\n      };\n    case \"RECEIVE_API_LYRICS\":\n      return {\n        ...state,\n        searchResult: action.searchResult,\n        lyrics: \"\"\n      };\n    case \"RECEIVE_SELECTED_LYRICS_API\":\n      return {\n        ...state,\n        lyrics: action.lyrics\n      };\n    case \"SAVE_LYRICS_ID\":\n      return {\n        ...state,\n        lyricsId: action.lyricsId\n      };\n    default:\n      return state;\n  }\n};\n\nexport default lyricsReducer;\n","const initialState = {\n  favList: [],\n  showFavList: true\n};\n\nconst favList = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_FAV_LIST\":\n      return {\n        ...state,\n        favList: action.favList.filter(item => item !== null)\n      };\n    case \"REMOVE_ITEM\":\n      const index = action.index;\n      const itemToRemove = state.favList[index];\n      return {\n        ...state,\n        favList: state.favList.filter(item => item !== itemToRemove)\n      };\n    case \"TOGGLE_FAV_LIST\":\n      return {\n        ...state,\n        showFavList: !state.showFavList\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default favList;\n","import { combineReducers } from \"redux\";\nimport youtubeReducer from \"./youtube\";\nimport lyricsReducer from \"./lyrics\";\nimport favList from \"./favList\";\n\nconst reducers = combineReducers({\n  youtube: youtubeReducer,\n  lyrics: lyricsReducer,\n  favList\n});\n\nexport default reducers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport \"./index.scss\";\nimport Main from \"./components/Main\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./Reducers/index\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["keys.js","Actions/lyrics.js","components/LyricsSearch.js","Actions/youtube.js","components/YouTubeSearch.js","Actions/favList.js","components/MusicPlayer.js","components/YouTubeSearchResult.js","components/LyricsSearchResult.js","components/DisplayLyrics.js","components/FavListItems.js","components/FavList.js","components/Header.js","components/Main.js","Reducers/youtube.js","Reducers/lyrics.js","Reducers/favList.js","Reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","youtubeAPI","lyricsAPI","requestAPI","keyword","dispatch","fetch","concat","keys","then","response","text","responseText","replace","JSON","parse","json","data","message","body","track_list","searchResult","header","available","title","filteredData","Object","filter","key","track","track_name","includes","artist_name","reduce","obj","forEach","push","lyricsId","track_id","artist","thumb","album_coverart_100x100","type","favorite","receiveAPI","requestLyricsAPI","saveLyricsId","lyrics","undefined","lyrics_body","receiveSelectedLyricsAPI","LyricsSearch","inputKeyword","e","target","value","_this","props","searchLyrics","onKeyPress","which","react_default","a","createElement","className","onChange","this","onClick","class","React","Component","connect","state","selectVideo","selectedVideoId","items","console","log","pageInfo","totalResults","x","videoId","id","snippet","thumbnails","default","url","YouTubeSearch","searchYouTube","youtube","updateFavList","favList","removeItem","index","MusicPlayer","onReady","event","playVideo","getLocalData","local","localStorage","getItem","addFavList","favoriteItem","setItem","stringify","musicPlayer","YouTube","YouTubeSearchResult","_this2","map","item","href","src","LyricsSearchResult","selectSong","DisplayLyrics","error","FavListItems","componentDidMount","componentDidUpdate","selectListItem","selectedItem","reverse","FavList","showFavList","length","components_FavListItems","Header","favListButton","toggleFavList","Main","components_Header","components_YouTubeSearch","components_MusicPlayer","components_YouTubeSearchResult","components_LyricsSearch","components_DisplayLyrics","components_LyricsSearchResult","components_FavList","initialState","favData","youtubeReducer","arguments","action","objectSpread","lyricsReducer","itemToRemove","reducers","combineReducers","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","Main_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6500cf6d.chunk.js","sourcesContent":["module.exports = {\n  youtubeAPI: 'AIzaSyACRoXskjeWGZCsnH_cU5Km_7FH3XnT1f4',\n  lyricsAPI: 'f3125baf4c683c086d7349d8d73e510d'\n};\n","import keys from \"../keys\";\n\nexport const inputKeyword = keyword => ({\n  type: \"INPUT_KEYWORD_LYRICS\",\n  keyword\n});\n\nexport const receiveAPI = json => {\n  const data = json.message.body.track_list;\n  let searchResult = [];\n\n  if (json.message.header.available === 0) {\n    searchResult = [{ title: \"No result :(  Please try different keyword.\" }];\n  } else {\n    const filteredData = Object.keys(data)\n      .filter(\n        key =>\n          !data[key].track.track_name.includes(\"Karaoke\") &&\n          !data[key].track.artist_name.includes(\"Karaoke\")\n      )\n      .reduce((obj, key) => {\n        obj[key] = data[key];\n        return obj;\n      }, {});\n\n    Object.keys(filteredData).forEach(key =>\n      searchResult.push({\n        lyricsId: data[key].track.track_id,\n        artist: data[key].track.artist_name,\n        title: data[key].track.track_name,\n        thumb: data[key].track.album_coverart_100x100,\n        type: \"lyrics\",\n        favorite: false\n      })\n    );\n  }\n  return {\n    type: \"RECEIVE_API_LYRICS\",\n    searchResult\n  };\n};\n\nexport const requestAPI = keyword => dispatch =>\n  fetch(\n    `https://api.musixmatch.com/ws/1.1/track.search?q_track_artist=${keyword}&apikey=${\n      keys.lyricsAPI\n    }&format=jsonp&callback=jsonp_callback&page_size=15`\n  )\n    .then(response => response.text())\n    .then(responseText => {\n      const match = responseText.replace(/^jsonp_callback\\(|\\)\\;/g, \"\");\n      return match;\n    })\n    .then(text => JSON.parse(text))\n    .then(json => dispatch(receiveAPI(json)));\n\nexport const receiveSelectedLyricsAPI = json => {\n  let lyrics;\n  if (\n    json.message.body.lyrics === undefined ||\n    json.message.body.lyrics.lyrics_body === \"\"\n  ) {\n    lyrics = \" Sorry, no Lyrics :( \";\n  } else {\n    lyrics = json.message.body.lyrics.lyrics_body;\n  }\n  return {\n    type: \"RECEIVE_SELECTED_LYRICS_API\",\n    lyrics\n  };\n};\n\nconst saveLyricsId = lyricsId => ({\n  type: \"SAVE_LYRICS_ID\",\n  lyricsId\n});\n\nexport const requestLyricsAPI = lyricsId => {\n  return dispatch => {\n    dispatch(saveLyricsId(lyricsId));\n\n    return fetch(\n      `https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${lyricsId}&apikey=${\n        keys.lyricsAPI\n      }&format=jsonp&callback=jsonp_callback`\n    )\n      .then(response => response.text())\n      .then(responseText => {\n        const match = responseText.replace(/^jsonp_callback\\(|\\)\\;/g, \"\");\n        return match;\n      })\n      .then(text => JSON.parse(text))\n      .then(json => dispatch(receiveSelectedLyricsAPI(json)));\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { inputKeyword, requestAPI, requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass LyricsSearch extends React.Component {\n  inputKeyword = e => {\n    const keyword = e.target.value;\n    this.props.inputKeyword(keyword);\n  };\n  searchLyrics = () => {\n    const keyword = this.props.keyword;\n    this.props.requestAPI(keyword);\n  };\n  onKeyPress = e => {\n    if (e.which === 13) {\n      this.searchLyrics();\n    }\n  };\n  render() {\n    return (\n      <div className=\"search_area_box\">\n        <h3>Lyrics</h3>\n\n        <input\n          type=\"text\"\n          onChange={this.inputKeyword}\n          onKeyPress={this.onKeyPress}\n        />\n        <button onClick={this.searchLyrics} className=\"search_button\">\n          <i class=\"fas fa-search\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyword: state.lyrics.keyword\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  requestAPI: keyword => {\n    dispatch(requestAPI(keyword));\n  },\n  inputKeyword: keyword => {\n    dispatch(inputKeyword(keyword));\n  },\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LyricsSearch);\n","import keys from '../keys';\n\nexport const inputKeyword = keyword => {\n  return {\n    type: 'INPUT_KEYWORD_YOUTUBE',\n    keyword\n  };\n};\n\nexport const receiveAPI = json => {\n  let items = json.items;\n  let searchResult = [];\n  console.log(json);\n\n  if (json.pageInfo.totalResults === 0) {\n    searchResult = [{ title: 'No result :(  Please try different keyword.' }];\n  } else {\n    items.forEach(x =>\n      searchResult.push({\n        videoId: x.id.videoId,\n        title: x.snippet.title,\n        thumb: x.snippet.thumbnails.default.url,\n        type: 'youtube'\n      })\n    );\n  }\n  return {\n    type: 'RECEIVE_API_YOUTUBE',\n    searchResult\n  };\n};\n\nexport const selectVideo = selectedVideoId => {\n  return {\n    type: 'SELECT_VIDEO',\n    selectedVideoId\n  };\n};\n\nexport const requestAPI = keyword => {\n  return dispatch => {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/search?type=video&part=snippet&q=${keyword}&key=${\n        keys.youtubeAPI\n      }&maxResults=15`\n    )\n      .then(response => response.json())\n      .then(json => dispatch(receiveAPI(json)));\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { inputKeyword, requestAPI } from \"../Actions/youtube\";\n\nclass YouTubeSearch extends React.Component {\n  inputKeyword = e => {\n    const keyword = e.target.value;\n    this.props.inputKeyword(keyword);\n  };\n  searchYouTube = () => {\n    const keyword = this.props.keyword;\n    this.props.requestAPI(keyword);\n  };\n  onKeyPress = e => {\n    if (e.which === 13) {\n      this.searchYouTube();\n    }\n  };\n  render() {\n    return (\n      <div className=\"search_area_box\">\n        <h3>YouTube</h3>\n        <input\n          type=\"text\"\n          onChange={this.inputKeyword}\n          onKeyPress={this.onKeyPress}\n        />\n        <button onClick={this.searchYouTube} className=\"search_button\">\n          <i class=\"fas fa-search\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyword: state.youtube.keyword,\n    searchResult: state.youtube.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  requestAPI: keyword => {\n    dispatch(requestAPI(keyword));\n  },\n  inputKeyword: keyword => {\n    dispatch(inputKeyword(keyword));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YouTubeSearch);\n","export const updateFavList = favList => {\n  return {\n    type: \"UPDATE_FAV_LIST\",\n    favList\n  };\n};\n\nexport const removeItem = index => ({\n  type: \"REMOVE_ITEM\",\n  index\n});\nexport const toggleFavList = () => ({\n  type: \"TOGGLE_FAV_LIST\"\n});\n","import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport { connect } from \"react-redux\";\nimport { updateFavList } from \"../Actions/favList\";\n\nclass MusicPlayer extends React.Component {\n  onReady = event => {\n    event.target.playVideo();\n  };\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  addFavList = () => {\n    let favList = this.getLocalData();\n    const searchResult = this.props.searchResult;\n    const selectedVideoId = this.props.selectedVideoId;\n    const index = Object.keys(searchResult).filter(\n      key => searchResult[key].videoId === selectedVideoId\n    );\n    const favoriteItem = searchResult[index];\n    const result = favList.push(favoriteItem);\n    localStorage.setItem(\"favorite\", JSON.stringify(favList));\n\n    this.props.updateFavList(favList);\n  };\n  render() {\n    return (\n      <div>\n        {this.props.musicPlayer && (\n          <div>\n            <button onClick={this.addFavList} className=\"fav_button\">\n              <i class=\"far fa-heart\" />\n            </button>\n            <YouTube\n              videoId={this.props.selectedVideoId}\n              onReady={this.onReady}\n              className=\"main_content video\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    musicPlayer: state.youtube.musicPlayer,\n    selectedVideoId: state.youtube.selectedVideoId,\n    searchResult: state.youtube.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MusicPlayer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../Actions/youtube\";\n\nclass YouTubeSearchResult extends React.Component {\n  selectVideo = index => {\n    const selectedVideoId = this.props.searchResult[index].videoId;\n    this.props.selectVideo(selectedVideoId);\n  };\n  render() {\n    return (\n      <div id=\"youtube_result_top\">\n        {this.props.searchResult.map((item, index) => (\n          <a href=\"#jump\" className=\"result_item_link\">\n            <div\n              key={index}\n              onClick={() => this.selectVideo(index)}\n              className=\"result_item_box\"\n            >\n              <img src={item.thumb} />\n              <div className=\"description_box\">\n                <p>{item.title}</p>\n              </div>\n            </div>\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResult: state.youtube.searchResult,\n    musicPlayer: state.youtube.musicPlayer\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  selectVideo: selectedVideoId => {\n    dispatch(selectVideo(selectedVideoId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(YouTubeSearchResult);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass LyricsSearchResult extends React.Component {\n  selectSong = index => {\n    const lyricsId = this.props.searchResult[index].lyricsId;\n    this.props.requestLyricsAPI(lyricsId);\n  };\n  render() {\n    return (\n      <div id=\"lyrics_result_top\">\n        {this.props.searchResult.map((x, index) => (\n          <a href=\"#jump\" className=\"result_item_link\">\n            <div\n              key={index}\n              onClick={() => this.selectSong(index)}\n              className=\"result_item_box\"\n            >\n              <img src={x.thumb} />\n\n              <div className=\"description_box\">\n                <p className=\"title\"> {x.title}</p>\n                <p className=\"artist\"> {x.artist}</p>\n              </div>\n            </div>\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResult: state.lyrics.searchResult\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LyricsSearchResult);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateFavList, removeItem } from \"../Actions/favList\";\n\nclass DisplayLyrics extends React.Component {\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  addFavList = () => {\n    let favList = this.getLocalData();\n    const searchResult = this.props.searchResult;\n    const lyricsId = this.props.lyricsId;\n    const index = Object.keys(searchResult).filter(\n      key => searchResult[key].lyricsId === lyricsId\n    );\n    const favoriteItem = searchResult[index];\n    const result = favList.push(favoriteItem);\n    localStorage.setItem(\"favorite\", JSON.stringify(favList));\n    this.props.updateFavList(favList);\n  };\n  render() {\n    return (\n      <div className=\"lyrics_box\">\n        {this.props.error && <p>error</p>}\n\n        {this.props.lyrics && (\n          <div>\n            <button onClick={this.addFavList} className=\"fav_button\">\n              <i className=\"far fa-heart\" />\n            </button>\n\n            <div id=\"jump2\" className=\"main_content lyrics\">\n              {this.props.lyrics.replace(\"\\n,[object Object]\", <br />)}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    lyrics: state.lyrics.lyrics,\n    searchResult: state.lyrics.searchResult,\n    lyricsId: state.lyrics.lyricsId,\n    favList: state.favList.favList,\n    error: state.lyrics.error\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  },\n  removeItem: index => {\n    dispatch(removeItem(index));\n  }\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DisplayLyrics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectVideo } from \"../Actions/youtube\";\nimport { updateFavList, removeItem } from \"../Actions/favList\";\nimport { requestLyricsAPI } from \"../Actions/lyrics\";\n\nclass FavListItems extends React.Component {\n  getLocalData = () => {\n    const local = localStorage.getItem(\"favorite\");\n    try {\n      return local && local !== null ? JSON.parse(local) : [];\n    } catch (e) {\n      return [];\n    }\n  };\n  componentDidMount = () => {\n    let favList = this.getLocalData();\n    this.props.updateFavList(favList);\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem(\"favorite\", JSON.stringify(this.props.favList));\n  };\n  selectListItem = index => {\n    const selectedItem = this.props.favList[index];\n    if (selectedItem.type === \"youtube\") {\n      const selectedVideoId = selectedItem.videoId;\n      this.props.selectVideo(selectedVideoId);\n    } else {\n      const lyricsId = selectedItem.lyricsId;\n      this.props.requestLyricsAPI(lyricsId);\n    }\n  };\n  removeItem = index => {\n    this.props.removeItem(index);\n  };\n  render() {\n    return (\n      <div>\n        {this.props.favList\n          .map((x, index) => (\n            <div>\n              <button\n                onClick={() => this.removeItem(index)}\n                className=\"remove_fav_item_button\"\n              >\n                <i className=\"fas fa-times-circle\" />\n              </button>\n              <a\n                href=\"#\"\n                onClick={() => this.selectListItem(index)}\n                className=\"result_item_link\"\n              >\n                <div key={index} className=\"fav_item_box\">\n                  <img src={x.thumb} className=\"fav_thumb\" />\n                  <div className=\"fav_description_box\">\n                    <p> {x.title}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          ))\n          .reverse()}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    favList: state.favList.favList,\n    searchResult: state.lyrics.searchResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFavList: favList => {\n    dispatch(updateFavList(favList));\n  },\n  selectVideo: selectedVideoId => {\n    dispatch(selectVideo(selectedVideoId));\n  },\n  requestLyricsAPI: lyricsId => {\n    dispatch(requestLyricsAPI(lyricsId));\n  },\n  removeItem: index => {\n    dispatch(removeItem(index));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FavListItems);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FavListItems from \"./FavListItems\";\n\nclass FavList extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          this.props.showFavList\n            ? \"box box_fav_list_show\"\n            : \"box box_fav_list_hide\"\n        }\n      >\n        {this.props.showFavList && (\n          <div>\n            <h3>Favorite List</h3>\n            {this.props.favList.length === 0 ? (\n              <p className=\"no_fav_items_message\">\n                There is no favorite item yet.\n              </p>\n            ) : (\n              <p />\n            )}\n\n            <FavListItems />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    favList: state.favList.favList,\n    showFavList: state.favList.showFavList\n  };\n};\n\nexport default connect(mapStateToProps)(FavList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleFavList } from \"../Actions/favList\";\n\nclass Header extends React.Component {\n  favListButton = () => {\n    this.props.toggleFavList();\n  };\n  render() {\n    return (\n      <div className=\"header\" id=\"jump\">\n        <h1>Music and Lyrics</h1>\n        <button className=\"fav_list_button\" onClick={this.favListButton}>\n          {this.props.showFavList ? \"Hide Fav List\" : \"Show Fav List\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showFavList: state.favList.showFavList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleFavList: () => {\n    dispatch(toggleFavList());\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from \"react\";\nimport LyricsSearch from \"./LyricsSearch\";\nimport YouTubeSearch from \"./YouTubeSearch\";\nimport MusicPlayer from \"./MusicPlayer\";\nimport YouTubeSearchResult from \"./YouTubeSearchResult\";\nimport LyricsSearchResult from \"./LyricsSearchResult\";\nimport DisplayLyrics from \"./DisplayLyrics\";\nimport FavList from \"./FavList\";\nimport Header from \"./Header\";\n\nexport default class Main extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <div className=\"box\">\n            <YouTubeSearch />\n            <MusicPlayer />\n            <YouTubeSearchResult />\n          </div>\n          <div className=\"box\">\n            <LyricsSearch />\n            <DisplayLyrics />\n            <LyricsSearchResult />\n          </div>\n          <FavList />\n        </div>\n      </div>\n    );\n  }\n}\n","const initialState = {\n  keyword: \"\",\n  searchResult: [],\n  selectedVideoId: \"\",\n  musicPlayer: false,\n  favData: []\n};\n\nconst youtubeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INPUT_KEYWORD_YOUTUBE\":\n      return {\n        ...state,\n        keyword: action.keyword\n      };\n    case \"RECEIVE_API_YOUTUBE\":\n      return {\n        ...state,\n        searchResult: action.searchResult,\n        musicPlayer: false\n      };\n    case \"SELECT_VIDEO\":\n      return {\n        ...state,\n        selectedVideoId: action.selectedVideoId,\n        musicPlayer: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default youtubeReducer;\n","const initialState = {\n  keyword: \"\",\n  searchResult: [],\n  lyrics: \"\",\n  lyricsId: \"\"\n};\n\nconst lyricsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INPUT_KEYWORD_LYRICS\":\n      return {\n        ...state,\n        keyword: action.keyword\n      };\n    case \"RECEIVE_API_LYRICS\":\n      return {\n        ...state,\n        searchResult: action.searchResult,\n        lyrics: \"\"\n      };\n    case \"RECEIVE_SELECTED_LYRICS_API\":\n      return {\n        ...state,\n        lyrics: action.lyrics\n      };\n    case \"SAVE_LYRICS_ID\":\n      return {\n        ...state,\n        lyricsId: action.lyricsId\n      };\n    default:\n      return state;\n  }\n};\n\nexport default lyricsReducer;\n","const initialState = {\n  favList: [],\n  showFavList: true\n};\n\nconst favList = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_FAV_LIST\":\n      return {\n        ...state,\n        favList: action.favList.filter(item => item !== null)\n      };\n    case \"REMOVE_ITEM\":\n      const index = action.index;\n      const itemToRemove = state.favList[index];\n      return {\n        ...state,\n        favList: state.favList.filter(item => item !== itemToRemove)\n      };\n    case \"TOGGLE_FAV_LIST\":\n      return {\n        ...state,\n        showFavList: !state.showFavList\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default favList;\n","import { combineReducers } from \"redux\";\nimport youtubeReducer from \"./youtube\";\nimport lyricsReducer from \"./lyrics\";\nimport favList from \"./favList\";\n\nconst reducers = combineReducers({\n  youtube: youtubeReducer,\n  lyrics: lyricsReducer,\n  favList\n});\n\nexport default reducers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport \"./index.scss\";\nimport Main from \"./components/Main\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./Reducers/index\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}